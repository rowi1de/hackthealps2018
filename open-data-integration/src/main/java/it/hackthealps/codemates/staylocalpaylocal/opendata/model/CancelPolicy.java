/*
 * Open Data Hub PostgreSQL Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.hackthealps.codemates.staylocalpaylocal.opendata.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * CancelPolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-22T03:00:41.182+02:00")
public class CancelPolicy {
  @JsonProperty("Id")
  private String id = null;

  @JsonProperty("Refundable")
  private Integer refundable = null;

  @JsonProperty("RefundableUntil")
  private String refundableUntil = null;

  @JsonProperty("Description")
  private String description = null;

  @JsonProperty("Penalties")
  private List<Penalty> penalties = null;

  public CancelPolicy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CancelPolicy refundable(Integer refundable) {
    this.refundable = refundable;
    return this;
  }

   /**
   * Get refundable
   * @return refundable
  **/
  @ApiModelProperty(value = "")
  public Integer getRefundable() {
    return refundable;
  }

  public void setRefundable(Integer refundable) {
    this.refundable = refundable;
  }

  public CancelPolicy refundableUntil(String refundableUntil) {
    this.refundableUntil = refundableUntil;
    return this;
  }

   /**
   * Get refundableUntil
   * @return refundableUntil
  **/
  @ApiModelProperty(value = "")
  public String getRefundableUntil() {
    return refundableUntil;
  }

  public void setRefundableUntil(String refundableUntil) {
    this.refundableUntil = refundableUntil;
  }

  public CancelPolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CancelPolicy penalties(List<Penalty> penalties) {
    this.penalties = penalties;
    return this;
  }

  public CancelPolicy addPenaltiesItem(Penalty penaltiesItem) {
    if (this.penalties == null) {
      this.penalties = new ArrayList<>();
    }
    this.penalties.add(penaltiesItem);
    return this;
  }

   /**
   * Get penalties
   * @return penalties
  **/
  @ApiModelProperty(value = "")
  public List<Penalty> getPenalties() {
    return penalties;
  }

  public void setPenalties(List<Penalty> penalties) {
    this.penalties = penalties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CancelPolicy cancelPolicy = (CancelPolicy) o;
    return Objects.equals(this.id, cancelPolicy.id) &&
        Objects.equals(this.refundable, cancelPolicy.refundable) &&
        Objects.equals(this.refundableUntil, cancelPolicy.refundableUntil) &&
        Objects.equals(this.description, cancelPolicy.description) &&
        Objects.equals(this.penalties, cancelPolicy.penalties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, refundable, refundableUntil, description, penalties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CancelPolicy {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    refundable: ").append(toIndentedString(refundable)).append("\n");
    sb.append("    refundableUntil: ").append(toIndentedString(refundableUntil)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    penalties: ").append(toIndentedString(penalties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

