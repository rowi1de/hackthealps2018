/*
 * Open Data Hub PostgreSQL Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.hackthealps.codemates.staylocalpaylocal.opendata.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * ImageGalleryLocalized
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-22T03:00:41.182+02:00")
public class ImageGalleryLocalized {
  @JsonProperty("ImageName")
  private String imageName = null;

  @JsonProperty("ImageUrl")
  private String imageUrl = null;

  @JsonProperty("Width")
  private Integer width = null;

  @JsonProperty("Height")
  private Integer height = null;

  @JsonProperty("ImageSource")
  private String imageSource = null;

  @JsonProperty("ImageTitle")
  private String imageTitle = null;

  @JsonProperty("ImageDesc")
  private String imageDesc = null;

  @JsonProperty("IsInGallery")
  private Boolean isInGallery = null;

  @JsonProperty("ListPosition")
  private Integer listPosition = null;

  @JsonProperty("ValidFrom")
  private OffsetDateTime validFrom = null;

  @JsonProperty("ValidTo")
  private OffsetDateTime validTo = null;

  @JsonProperty("CopyRight")
  private String copyRight = null;

  public ImageGalleryLocalized imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @ApiModelProperty(value = "")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public ImageGalleryLocalized imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public ImageGalleryLocalized width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(value = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public ImageGalleryLocalized height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(value = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public ImageGalleryLocalized imageSource(String imageSource) {
    this.imageSource = imageSource;
    return this;
  }

   /**
   * Get imageSource
   * @return imageSource
  **/
  @ApiModelProperty(value = "")
  public String getImageSource() {
    return imageSource;
  }

  public void setImageSource(String imageSource) {
    this.imageSource = imageSource;
  }

  public ImageGalleryLocalized imageTitle(String imageTitle) {
    this.imageTitle = imageTitle;
    return this;
  }

   /**
   * Get imageTitle
   * @return imageTitle
  **/
  @ApiModelProperty(value = "")
  public String getImageTitle() {
    return imageTitle;
  }

  public void setImageTitle(String imageTitle) {
    this.imageTitle = imageTitle;
  }

  public ImageGalleryLocalized imageDesc(String imageDesc) {
    this.imageDesc = imageDesc;
    return this;
  }

   /**
   * Get imageDesc
   * @return imageDesc
  **/
  @ApiModelProperty(value = "")
  public String getImageDesc() {
    return imageDesc;
  }

  public void setImageDesc(String imageDesc) {
    this.imageDesc = imageDesc;
  }

  public ImageGalleryLocalized isInGallery(Boolean isInGallery) {
    this.isInGallery = isInGallery;
    return this;
  }

   /**
   * Get isInGallery
   * @return isInGallery
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsInGallery() {
    return isInGallery;
  }

  public void setIsInGallery(Boolean isInGallery) {
    this.isInGallery = isInGallery;
  }

  public ImageGalleryLocalized listPosition(Integer listPosition) {
    this.listPosition = listPosition;
    return this;
  }

   /**
   * Get listPosition
   * @return listPosition
  **/
  @ApiModelProperty(value = "")
  public Integer getListPosition() {
    return listPosition;
  }

  public void setListPosition(Integer listPosition) {
    this.listPosition = listPosition;
  }

  public ImageGalleryLocalized validFrom(OffsetDateTime validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Get validFrom
   * @return validFrom
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getValidFrom() {
    return validFrom;
  }

  public void setValidFrom(OffsetDateTime validFrom) {
    this.validFrom = validFrom;
  }

  public ImageGalleryLocalized validTo(OffsetDateTime validTo) {
    this.validTo = validTo;
    return this;
  }

   /**
   * Get validTo
   * @return validTo
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getValidTo() {
    return validTo;
  }

  public void setValidTo(OffsetDateTime validTo) {
    this.validTo = validTo;
  }

  public ImageGalleryLocalized copyRight(String copyRight) {
    this.copyRight = copyRight;
    return this;
  }

   /**
   * Get copyRight
   * @return copyRight
  **/
  @ApiModelProperty(value = "")
  public String getCopyRight() {
    return copyRight;
  }

  public void setCopyRight(String copyRight) {
    this.copyRight = copyRight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageGalleryLocalized imageGalleryLocalized = (ImageGalleryLocalized) o;
    return Objects.equals(this.imageName, imageGalleryLocalized.imageName) &&
        Objects.equals(this.imageUrl, imageGalleryLocalized.imageUrl) &&
        Objects.equals(this.width, imageGalleryLocalized.width) &&
        Objects.equals(this.height, imageGalleryLocalized.height) &&
        Objects.equals(this.imageSource, imageGalleryLocalized.imageSource) &&
        Objects.equals(this.imageTitle, imageGalleryLocalized.imageTitle) &&
        Objects.equals(this.imageDesc, imageGalleryLocalized.imageDesc) &&
        Objects.equals(this.isInGallery, imageGalleryLocalized.isInGallery) &&
        Objects.equals(this.listPosition, imageGalleryLocalized.listPosition) &&
        Objects.equals(this.validFrom, imageGalleryLocalized.validFrom) &&
        Objects.equals(this.validTo, imageGalleryLocalized.validTo) &&
        Objects.equals(this.copyRight, imageGalleryLocalized.copyRight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageName, imageUrl, width, height, imageSource, imageTitle, imageDesc, isInGallery, listPosition, validFrom, validTo, copyRight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageGalleryLocalized {\n");
    
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    imageSource: ").append(toIndentedString(imageSource)).append("\n");
    sb.append("    imageTitle: ").append(toIndentedString(imageTitle)).append("\n");
    sb.append("    imageDesc: ").append(toIndentedString(imageDesc)).append("\n");
    sb.append("    isInGallery: ").append(toIndentedString(isInGallery)).append("\n");
    sb.append("    listPosition: ").append(toIndentedString(listPosition)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validTo: ").append(toIndentedString(validTo)).append("\n");
    sb.append("    copyRight: ").append(toIndentedString(copyRight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

