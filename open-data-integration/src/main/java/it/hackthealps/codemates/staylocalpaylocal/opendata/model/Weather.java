/*
 * Open Data Hub PostgreSQL Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.hackthealps.codemates.staylocalpaylocal.opendata.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.hackthealps.codemates.staylocalpaylocal.opendata.model.Conditions;
import it.hackthealps.codemates.staylocalpaylocal.opendata.model.Forecast;
import it.hackthealps.codemates.staylocalpaylocal.opendata.model.Mountain;
import it.hackthealps.codemates.staylocalpaylocal.opendata.model.Stationdata;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Weather
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-22T03:00:41.182+02:00")
public class Weather {
  @JsonProperty("Id")
  private Integer id = null;

  @JsonProperty("date")
  private OffsetDateTime date = null;

  @JsonProperty("evolutiontitle")
  private String evolutiontitle = null;

  @JsonProperty("evolution")
  private String evolution = null;

  @JsonProperty("Conditions")
  private List<Conditions> conditions = null;

  @JsonProperty("Forecast")
  private List<Forecast> forecast = null;

  @JsonProperty("Mountain")
  private List<Mountain> mountain = null;

  @JsonProperty("Stationdata")
  private List<Stationdata> stationdata = null;

  public Weather id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Weather date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public Weather evolutiontitle(String evolutiontitle) {
    this.evolutiontitle = evolutiontitle;
    return this;
  }

   /**
   * Get evolutiontitle
   * @return evolutiontitle
  **/
  @ApiModelProperty(value = "")
  public String getEvolutiontitle() {
    return evolutiontitle;
  }

  public void setEvolutiontitle(String evolutiontitle) {
    this.evolutiontitle = evolutiontitle;
  }

  public Weather evolution(String evolution) {
    this.evolution = evolution;
    return this;
  }

   /**
   * Get evolution
   * @return evolution
  **/
  @ApiModelProperty(value = "")
  public String getEvolution() {
    return evolution;
  }

  public void setEvolution(String evolution) {
    this.evolution = evolution;
  }

  public Weather conditions(List<Conditions> conditions) {
    this.conditions = conditions;
    return this;
  }

  public Weather addConditionsItem(Conditions conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @ApiModelProperty(value = "")
  public List<Conditions> getConditions() {
    return conditions;
  }

  public void setConditions(List<Conditions> conditions) {
    this.conditions = conditions;
  }

  public Weather forecast(List<Forecast> forecast) {
    this.forecast = forecast;
    return this;
  }

  public Weather addForecastItem(Forecast forecastItem) {
    if (this.forecast == null) {
      this.forecast = new ArrayList<>();
    }
    this.forecast.add(forecastItem);
    return this;
  }

   /**
   * Get forecast
   * @return forecast
  **/
  @ApiModelProperty(value = "")
  public List<Forecast> getForecast() {
    return forecast;
  }

  public void setForecast(List<Forecast> forecast) {
    this.forecast = forecast;
  }

  public Weather mountain(List<Mountain> mountain) {
    this.mountain = mountain;
    return this;
  }

  public Weather addMountainItem(Mountain mountainItem) {
    if (this.mountain == null) {
      this.mountain = new ArrayList<>();
    }
    this.mountain.add(mountainItem);
    return this;
  }

   /**
   * Get mountain
   * @return mountain
  **/
  @ApiModelProperty(value = "")
  public List<Mountain> getMountain() {
    return mountain;
  }

  public void setMountain(List<Mountain> mountain) {
    this.mountain = mountain;
  }

  public Weather stationdata(List<Stationdata> stationdata) {
    this.stationdata = stationdata;
    return this;
  }

  public Weather addStationdataItem(Stationdata stationdataItem) {
    if (this.stationdata == null) {
      this.stationdata = new ArrayList<>();
    }
    this.stationdata.add(stationdataItem);
    return this;
  }

   /**
   * Get stationdata
   * @return stationdata
  **/
  @ApiModelProperty(value = "")
  public List<Stationdata> getStationdata() {
    return stationdata;
  }

  public void setStationdata(List<Stationdata> stationdata) {
    this.stationdata = stationdata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Weather weather = (Weather) o;
    return Objects.equals(this.id, weather.id) &&
        Objects.equals(this.date, weather.date) &&
        Objects.equals(this.evolutiontitle, weather.evolutiontitle) &&
        Objects.equals(this.evolution, weather.evolution) &&
        Objects.equals(this.conditions, weather.conditions) &&
        Objects.equals(this.forecast, weather.forecast) &&
        Objects.equals(this.mountain, weather.mountain) &&
        Objects.equals(this.stationdata, weather.stationdata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, evolutiontitle, evolution, conditions, forecast, mountain, stationdata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Weather {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    evolutiontitle: ").append(toIndentedString(evolutiontitle)).append("\n");
    sb.append("    evolution: ").append(toIndentedString(evolution)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    forecast: ").append(toIndentedString(forecast)).append("\n");
    sb.append("    mountain: ").append(toIndentedString(mountain)).append("\n");
    sb.append("    stationdata: ").append(toIndentedString(stationdata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

