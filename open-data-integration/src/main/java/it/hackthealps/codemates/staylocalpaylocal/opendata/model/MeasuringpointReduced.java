/*
 * Open Data Hub PostgreSQL Api Tourism
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.hackthealps.codemates.staylocalpaylocal.opendata.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.hackthealps.codemates.staylocalpaylocal.opendata.model.WeatherObservation;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * MeasuringpointReduced
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-22T03:00:41.182+02:00")
public class MeasuringpointReduced {
  @JsonProperty("Id")
  private String id = null;

  @JsonProperty("LastUpdate")
  private OffsetDateTime lastUpdate = null;

  @JsonProperty("Shortname")
  private String shortname = null;

  @JsonProperty("SnowHeight")
  private String snowHeight = null;

  @JsonProperty("newSnowHeight")
  private String newSnowHeight = null;

  @JsonProperty("Temperature")
  private String temperature = null;

  @JsonProperty("LastSnowDate")
  private OffsetDateTime lastSnowDate = null;

  @JsonProperty("WeatherObservation")
  private List<WeatherObservation> weatherObservation = null;

  public MeasuringpointReduced id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MeasuringpointReduced lastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * Get lastUpdate
   * @return lastUpdate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }

  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public MeasuringpointReduced shortname(String shortname) {
    this.shortname = shortname;
    return this;
  }

   /**
   * Get shortname
   * @return shortname
  **/
  @ApiModelProperty(value = "")
  public String getShortname() {
    return shortname;
  }

  public void setShortname(String shortname) {
    this.shortname = shortname;
  }

  public MeasuringpointReduced snowHeight(String snowHeight) {
    this.snowHeight = snowHeight;
    return this;
  }

   /**
   * Get snowHeight
   * @return snowHeight
  **/
  @ApiModelProperty(value = "")
  public String getSnowHeight() {
    return snowHeight;
  }

  public void setSnowHeight(String snowHeight) {
    this.snowHeight = snowHeight;
  }

  public MeasuringpointReduced newSnowHeight(String newSnowHeight) {
    this.newSnowHeight = newSnowHeight;
    return this;
  }

   /**
   * Get newSnowHeight
   * @return newSnowHeight
  **/
  @ApiModelProperty(value = "")
  public String getNewSnowHeight() {
    return newSnowHeight;
  }

  public void setNewSnowHeight(String newSnowHeight) {
    this.newSnowHeight = newSnowHeight;
  }

  public MeasuringpointReduced temperature(String temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * Get temperature
   * @return temperature
  **/
  @ApiModelProperty(value = "")
  public String getTemperature() {
    return temperature;
  }

  public void setTemperature(String temperature) {
    this.temperature = temperature;
  }

  public MeasuringpointReduced lastSnowDate(OffsetDateTime lastSnowDate) {
    this.lastSnowDate = lastSnowDate;
    return this;
  }

   /**
   * Get lastSnowDate
   * @return lastSnowDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastSnowDate() {
    return lastSnowDate;
  }

  public void setLastSnowDate(OffsetDateTime lastSnowDate) {
    this.lastSnowDate = lastSnowDate;
  }

  public MeasuringpointReduced weatherObservation(List<WeatherObservation> weatherObservation) {
    this.weatherObservation = weatherObservation;
    return this;
  }

  public MeasuringpointReduced addWeatherObservationItem(WeatherObservation weatherObservationItem) {
    if (this.weatherObservation == null) {
      this.weatherObservation = new ArrayList<>();
    }
    this.weatherObservation.add(weatherObservationItem);
    return this;
  }

   /**
   * Get weatherObservation
   * @return weatherObservation
  **/
  @ApiModelProperty(value = "")
  public List<WeatherObservation> getWeatherObservation() {
    return weatherObservation;
  }

  public void setWeatherObservation(List<WeatherObservation> weatherObservation) {
    this.weatherObservation = weatherObservation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeasuringpointReduced measuringpointReduced = (MeasuringpointReduced) o;
    return Objects.equals(this.id, measuringpointReduced.id) &&
        Objects.equals(this.lastUpdate, measuringpointReduced.lastUpdate) &&
        Objects.equals(this.shortname, measuringpointReduced.shortname) &&
        Objects.equals(this.snowHeight, measuringpointReduced.snowHeight) &&
        Objects.equals(this.newSnowHeight, measuringpointReduced.newSnowHeight) &&
        Objects.equals(this.temperature, measuringpointReduced.temperature) &&
        Objects.equals(this.lastSnowDate, measuringpointReduced.lastSnowDate) &&
        Objects.equals(this.weatherObservation, measuringpointReduced.weatherObservation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lastUpdate, shortname, snowHeight, newSnowHeight, temperature, lastSnowDate, weatherObservation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeasuringpointReduced {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    shortname: ").append(toIndentedString(shortname)).append("\n");
    sb.append("    snowHeight: ").append(toIndentedString(snowHeight)).append("\n");
    sb.append("    newSnowHeight: ").append(toIndentedString(newSnowHeight)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    lastSnowDate: ").append(toIndentedString(lastSnowDate)).append("\n");
    sb.append("    weatherObservation: ").append(toIndentedString(weatherObservation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

